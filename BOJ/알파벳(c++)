//dfs
#include <iostream>

using namespace std;
int N,M;
char arr[21][21];
bool visit[26];
int y_dir[] = { 0,1,0,-1 };
int x_dir[] = { 1,0,-1,0 };
int ans = 0;

void dfs(int y, int x, int dis) {
    ans = ans < dis ? dis : ans;
    for (int i = 0; i < 4; i++) {
        int ny = y + y_dir[i];
        int nx = x + x_dir[i];
        if (ny<1 || nx<1 || ny>N || nx>M)continue;
        if (visit[arr[ny][nx] - 'A'])continue;
        visit[arr[ny][nx] - 'A'] = true;
        dfs(ny, nx, dis + 1);
        visit[arr[ny][nx] - 'A'] = false;
    }

}

int main(void)
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    
    cin >> N>>M ;
    for (int i = 1; i <= N; i++) {
        for (int j = 1; j <= M; j++) {
            cin >> arr[i][j];
        }
    }
    visit[arr[1][1] - 'A'] = true;
    dfs(1, 1,1);
    cout << ans;
    return 0;
}
