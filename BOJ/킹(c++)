//시뮬레이션
#include <iostream>

using namespace std;

int K;
int kx, ky, dx, dy;
int x_dir[8] = {1,-1,0,0,1,-1,1,-1};
int y_dir[8] = {0,0,-1,1,1,1,-1,-1};

void move(int dir) {
    int nky, nkx;
    nky = ky + y_dir[dir];
    nkx = kx + x_dir[dir];
    if (nky < 1 || nkx < 1 || nky>8 || nkx>8)
        return;
    
    if (nky == dy && nkx == dx) {
        int ndy=  dy + y_dir[dir];
        int ndx = dx + x_dir[dir];
        if (ndy < 1 || ndx < 1 || ndy>8 || ndx>8)
            return;
        dx = ndx; dy = ndy;
    }
    ky = nky; kx = nkx;
}

int main(void)
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    
    char c;
    cin >> c >> ky;
    kx = c - 'A'+1;
    cin >> c >> dy;
    dx = c - 'A'+1;
    cin >> K;

    string s;
    int dir;
    for (int i = 0; i < K; i++) {
        cin >> s;
        if (s == "R")
            dir = 0;
        else if (s == "L")
            dir = 1;
        else if (s == "B")
            dir = 2;
        else if (s == "T")
            dir = 3;
        else if (s == "RT")
            dir = 4;
        else if (s == "LT")
            dir = 5;
        else if (s == "RB")
            dir = 6;
        else if (s == "LB")
            dir = 7;
        move(dir);
    }

    cout << (char)(kx + 'A' - 1) << ky << endl;
    cout<< (char)(dx + 'A' - 1) <<dy << endl;

    return 0;
}

