//bfs 

#include <iostream>
#include <queue>
#include <cstring>
#include <fstream>
using namespace std;
int N, M;
int x_dir[4] = { 1,-1,0,0 };
int y_dir[4] = { 0,0,-1,1 };
int arr[301][301];
int new_arr[301][301];
bool visit[301][301];

void BFS(int i, int j) {
    queue<pair<int, int>> q;
    q.push(make_pair(i, j));
    visit[i][j] = true;
    int y, x, ny, nx;
    while (!q.empty()) {
        y = q.front().first;
        x = q.front().second;
        q.pop();
        
        for (int i = 0; i < 4; i++) {
            ny = y + y_dir[i]; nx = x + x_dir[i];
            if(ny < 0 || nx < 0 || ny >= N || nx >= M)continue;
            if (arr[ny][nx] == 0 || visit[ny][nx])continue;
            visit[ny][nx] = true;
            q.push(make_pair(ny, nx));
        }
    }
}

int cal_land_cnt() {//빙산 덩어리 수 
    memset(visit, false, sizeof(visit));
    int cnt = 0;

    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            if (visit[i][j]||arr[i][j]==0)continue;
            BFS(i, j);
            cnt++;
        }
    }
    return cnt;
}

void melting() {
    memset(new_arr, 0, sizeof(new_arr));
    int y, x;
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            int cnt = 0;
            if (arr[i][j] == 0)continue;
            for (int dir = 0; dir < 4; dir++) {
                y = i + y_dir[dir];
                x = j + x_dir[dir];
                if (y < 0 || x < 0 || y >= N || x >= M)continue;
                if (arr[y][x] == 0)
                    cnt++;
            }
            new_arr[i][j] = arr[i][j] - cnt < 0 ? 0 : arr[i][j] - cnt;
        }
    }
    
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            arr[i][j] = new_arr[i][j];
        }
    }
}

int main(void)
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);

    cin >> N>>M;
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            cin >> arr[i][j];
        }
    }

    int time = 0, land_cnt;
    while (1) {
        land_cnt = cal_land_cnt();
        if (land_cnt == 0) {
            cout << 0;
            break;
        }
        else if (land_cnt >= 2) {
            cout << time;
            break;
        }
        melting();
        time++;
    }
    return 0;
}

