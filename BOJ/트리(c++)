//dfs
//리프노드 :자식 X 노드
#include <iostream>
#include <vector>

using namespace std;

int N;
vector<int> node[50];
int del_node;
int ans = 0;
void DFS(int now) {
    if (now == del_node)
        return;
    int size = node[now].size();
    if (size == 0) {
        ans++;
        return;
    }
    for (int i = 0; i < size; i++) {
        if (size == 1 && node[now][i] == del_node) {//자식이 한개인데 그 자식이 삭제 노드->리프노드
            ans++;
        }
        DFS(node[now][i]);
    }
}

int main(void)
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    
    cin >> N;
    int parent;
    int root;
    for (int i = 0; i <N ; i++) {
        cin >> parent;
        if (parent != -1) {
            node[parent].push_back(i);
        }
        else {
            root = i;
        }
    }
    cin >> del_node;
    DFS(root);
    cout << ans;
    return 0;
}
