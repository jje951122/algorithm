#include <iostream>

#define MAX 501
using namespace std;
int N, M;
int arr[MAX][MAX];
int dp[MAX][MAX];
int y_dir[4] = { 0,1,0,-1 };
int x_dir[4] = { 1,0,-1,0 };
int dfs(int y, int x) {
    if (y == N - 1 && x == M - 1)
        return 1;
    if (dp[y][x] != -1)
        return dp[y][x];
    dp[y][x] = 0;
    int nx, ny;
    for (int i = 0; i < 4; i++) {
        ny = y + y_dir[i];
        nx = x + x_dir[i];
        if (ny < 0 || nx < 0 || ny >= N || nx >= M)continue;
        if (arr[y][x] > arr[ny][nx])
            dp[y][x] += dfs(ny, nx);
    }
    return dp[y][x];
}

int main(void)
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    
    cin >> N >> M;
    
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < M; j++) {
            cin >> arr[i][j];
            dp[i][j] = -1;
        }
    }
    cout<<dfs(0, 0);
    
    return 0;
}
