//dp - 이전의 기록을 이용하여 다음 행렬값을 갱신

#include <vector>

using namespace std;
int map[102][102]={0,};
int d[102][102];
int N,M;
void search(){
    for(int i=1;i<=N;i++){
        for(int j=1;j<=M;j++){
            if(map[i][j]==1){
                d[i][j]=0;
            }
            else{
                d[i][j]=(d[i-1][j]+d[i][j-1])%1000000007;
            }
        }
    }
}
               
int solution(int m, int n, vector<vector<int>> puddles) {
    N=n;M=m;
    for(int i=0;i<puddles.size();i++){
        map[puddles[i][1]][puddles[i][0]]=1;
    }
    d[1][0]=1;
    search();
        
    return d[n][m];
}
